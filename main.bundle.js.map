{"version":3,"sources":["webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src async","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'UpSlack';\n  public rawMinutes;\n  public hours;\n  public minutes;\n  public fee;\n  public rate;\n  public exchangeRate;\n\n  constructor() {\n    let defaultValues = {'rawMinutes':0, 'rate':57, 'exchangeRate':57.66, 'fee':20};\n    ['rawMinutes', 'rate', 'exchangeRate', 'fee'].map(field => {\n      let val;\n      if (val = parseFloat(localStorage.getItem(field))) {\n        this[field] = val;\n      } else {\n        this[field] = defaultValues[field];\n      }\n    });\n\n    this.changeTime(0);\n  }\n\n  changeTime(diff: number) {\n    if (0 > this.rawMinutes + diff) {\n      return;\n    }\n    this.rawMinutes += diff;\n    this.hours = Math.floor(this.rawMinutes / 60);\n    this.minutes = this.rawMinutes % 60;\n\n    this.updateLS();\n  }\n\n  private updateLS() {\n    ['rawMinutes', 'rate', 'exchangeRate', 'fee'].map(field => {\n      localStorage.setItem(field, this[field]);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MdButtonToggleModule, MdInputModule, MdButtonModule, MdGridListModule} from \"@angular/material\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MdButtonToggleModule,\n    MdButtonModule,\n    MdInputModule,\n    MdGridListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 165\n// module chunks = 1","module.exports = \"<md-grid-list cols=\\\"4\\\" rowheight=\\\"70px\\\">\\n    <md-grid-tile colspan=\\\"1\\\">\\n        <md-form-field>\\n            <input mdInput type=\\\"number\\\" placeholder=\\\"Hourly Rate\\\" [(ngModel)]=\\\"rate\\\">\\n        </md-form-field>\\n    </md-grid-tile>\\n    <md-grid-tile colspan=\\\"1\\\">\\n        <md-form-field>\\n            <input mdInput type=\\\"number\\\" placeholder=\\\"USDRUB\\\" [(ngModel)]=\\\"exchangeRate\\\">\\n        </md-form-field>\\n    </md-grid-tile>\\n    <md-grid-tile colspan=\\\"2\\\">\\n        <md-button-toggle-group [(ngModel)]=\\\"fee\\\">\\n            <md-button-toggle value=\\\"20\\\">\\n                20\\n            </md-button-toggle>\\n            <md-button-toggle value=\\\"10\\\">\\n                10\\n            </md-button-toggle>\\n            <md-button-toggle value=\\\"5\\\">\\n                5\\n            </md-button-toggle>\\n        </md-button-toggle-group>\\n    </md-grid-tile>\\n    <md-grid-tile>\\n        <button md-button (click)=\\\"changeTime(-10)\\\">–</button>\\n    </md-grid-tile>\\n    <md-grid-tile>\\n        <md-form-field>\\n            <input mdInput class=\\\"time\\\" disabled [value]=\\\"hours | number:'2.0-0'\\\">\\n        </md-form-field>\\n    </md-grid-tile>\\n\\n    <md-grid-tile>\\n        <md-form-field>\\n            <input mdInput class=\\\"time\\\" disabled [value]=\\\"minutes | number:'2.0-0'\\\">\\n        </md-form-field>\\n    </md-grid-tile>\\n    <md-grid-tile>\\n        <button md-button (click)=\\\"changeTime(10)\\\">+</button>\\n    </md-grid-tile>\\n    <md-grid-tile colspan=\\\"2\\\">\\n        <h1>${{ rate * rawMinutes * (1 - fee / 100) / 60 | number:'.2-2' }}</h1>\\n    </md-grid-tile>\\n    <md-grid-tile colspan=\\\"2\\\">\\n        <h2>{{ exchangeRate * rate * rawMinutes * (1 - fee / 100) / 60 | number:'.2-2' }}₽</h2>\\n    </md-grid-tile>\\n</md-grid-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 166\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 95;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 95\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}